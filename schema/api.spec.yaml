openapi: 3.0.1
info:
  title: Config manager
  description: Config manager service
  version: 0.0.1

servers:
  - url: 'https://cloud.redhat.com/api/config-manager/v1'
    description: production
  - url: /api/config-manager/v1
    description: relative path

paths:
  /states:
    get:
      summary: Get configuration state for requesting account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountState'
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Authentication missing from request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
    post:
      summary: Update configuration state for requesting account
      requestBody:
        description: State map that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountStateInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountState'
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}

  /changes:
    get:
      summary: Get state changes for requesting account
      parameters:
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateArchives'
        '400':
          description: Bad Request
          content: {}

  /changes/{id}:
    get:
      summary: Get single state change for requesting account
      parameters:
      - $ref: '#/components/parameters/StateIDParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateArchive'
        '400':
          description: Bad Request
          content: {}

  /runs:
    get:
      summary: Get a list of runs for each state change
      parameters:
      - $ref: '#/components/parameters/RunsFilter'
      - $ref: '#/components/parameters/RunsSortBy'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runs'
        '400':
          description: Bad Request
          content: {}
    post:
      summary: Generate new runs by applying a state change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountState'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunsCreated'

  /runs/{id}:
    get:
      summary: Get a single run
      parameters:
      - $ref: '#/components/parameters/RunIDParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'

components:
  schemas:
    Account:
      type: string
      minLength: 1
      maxLength: 10

    State:
      type: object
      additionalProperties:
        type: string

    StateID:
      type: string
      format: uuid

    Label:
      type: string

    Initiator:
      type: string

    Timestamp:
      type: string
      format: date-time

    RunID:
      type: string
      format: uuid

    Hostname:
      type: string

    RunStatus:
      type: string
      enum:
        - running
        - success
        - failure

    RunCreated:
      type: object
      properties:
        code:
          type: integer
          description: status code of request
        hostname:
          $ref: '#/components/schemas/Hostname'

    RunsCreated:
      type: array
      items:
        $ref: '#/components/schemas/RunCreated'

    AccountState:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Account'
        state:
          $ref: '#/components/schemas/State'
        id:
          $ref: '#/components/schemas/StateID'
        label:
          $ref: '#/components/schemas/Label'

    AccountStateInput:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Account'
        state:
          $ref: '#/components/schemas/State'

    StateArchive:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Account'
        id:
          $ref: '#/components/schemas/StateID'
        label:
          $ref: '#/components/schemas/Label'
        initiator:
          $ref: '#/components/schemas/Initiator'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        state:
          $ref: '#/components/schemas/State'

    Run:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RunID'
        account:
          $ref: '#/components/schemas/Account'
        hostname:
          $ref: '#/components/schemas/Hostname'
        initiator:
          $ref: '#/components/schemas/Initiator'
        label:
          $ref: '#/components/schemas/Label'
        status:
          $ref: '#/components/schemas/RunStatus'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        updated_at:
          $ref: '#/components/schemas/Timestamp'

    Runs:
      type: array
      items:
        $ref: '#/components/schemas/Run'

    StateArchives:
      type: array
      items:
        $ref: '#/components/schemas/StateArchive'

  parameters:
    StateIDParam:
      in: path
      name: id
      description: state archive identifier
      required: true
      schema:
        $ref: '#/components/schemas/StateID'

    RunIDParam:
      in: path
      name: id
      description: state archive identifier
      required: true
      schema:
        $ref: '#/components/schemas/RunID'

    RunsFilter:
      in: query
      name: filter
      required: false
      schema:
        $ref: '#/components/schemas/Label'

    RunsSortBy:
      in: query
      name: sort_by
      required: false
      schema:
        type: string
        enum:
          - created_at
          - created_at:asc
          - created_at:desc

    Limit:
      in: query
      name: limit
      description: Maximum number of results to return
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 50

    Offset:
      in: query
      name: offset
      description: >-
        Indicates the starting position of the query relative to the complete set of items that
        match the query
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
